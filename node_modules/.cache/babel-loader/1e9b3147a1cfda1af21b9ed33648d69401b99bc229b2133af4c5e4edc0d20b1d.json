{"ast":null,"code":"var _jsxFileName = \"/Users/zzoni/6-Sprint-Mission/src/component/Product/FileInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport imgPlaceHolder from \"../../images/imgPlaceHolder.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormInput({\n  name,\n  value,\n  onChange\n}) {\n  _s();\n  //파일 미리보기 주소를 문자열로 저장\n  const [preview, setPreview] = useState(imgPlaceHolder);\n\n  //Ref객체 생성 - Ref: 원하는 시점에 DOM Node에 접근할 때 사용\n  const inputRef = useRef();\n  const handleChange = e => {\n    //files는 배열이기 때문에 배열의 첫번째 값을 가져옴\n    const nextValue = e.target.files[0];\n\n    //onChange에 name값과 files의 0번째 value값을 아규먼트로 넘겨줌\n    onChange(name, nextValue);\n  };\n  const handleClearClick = () => {\n    //current는 현재 화면에 렌더링된 파일 인풋을 가르킴\n    const inputNode = inputRef.current;\n\n    //inputNode가 없으면 종료\n    if (!inputNode) return;\n\n    //inputNode의 value값을 초기화\n    inputNode.value = \"\";\n\n    //onChange에 name값과 null값을 아규먼트로 넘겨줌\n    onChange(name, null);\n  };\n  useEffect(() => {\n    //value 값이 없으면 useEffect 종료\n    if (!value) return;\n\n    //createObjectURL 문자열을 리턴하고 이 문자열은 해당 파일의 주소처럼 쓸 수 있는 값 -> 사이드 이펙트 발생\n    const nextPrevValue = URL.createObjectURL(value);\n\n    //value prop이 바뀌면 preview의 값이 변경\n    setPreview(nextPrevValue);\n\n    //콜백함수는 마지막으로 정리함수를 리턴\n    return () => {\n      //사이드 이펙트 정리\n      setPreview();\n      //object URL을 해제\n      URL.revokeObjectURL(nextPrevValue);\n    };\n  }, [value]); //value prop이 바뀔때마다 preview의 값이 변경\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgPlaceHolder,\n      alt: \"\\uC774\\uBBF8\\uC9C0 \\uB4F1\\uB85D \\uC774\\uBBF8\\uC9C0\",\n      onClick: () => {\n        var _inputRef$current;\n        return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.click();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: preview,\n      accept: \"image/png, image/jpeg\",\n      alt: \"\\uC0C1\\uD488 \\uC774\\uBBF8\\uC9C0 \\uBBF8\\uB9AC\\uBCF4\\uAE30\",\n      className: \"itemPreview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: name,\n      onChange: handleChange,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), value && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearClick,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(FormInput, \"d0Q9CcmVem6y5G6cf6YpXETuebM=\");\n_c = FormInput;\nexport default FormInput;\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["useEffect","useRef","useState","imgPlaceHolder","jsxDEV","_jsxDEV","FormInput","name","value","onChange","_s","preview","setPreview","inputRef","handleChange","e","nextValue","target","files","handleClearClick","inputNode","current","nextPrevValue","URL","createObjectURL","revokeObjectURL","children","src","alt","onClick","_inputRef$current","click","fileName","_jsxFileName","lineNumber","columnNumber","accept","className","type","ref","_c","$RefreshReg$"],"sources":["/Users/zzoni/6-Sprint-Mission/src/component/Product/FileInput.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport imgPlaceHolder from \"../../images/imgPlaceHolder.png\";\n\nfunction FormInput({ name, value, onChange }) {\n  //파일 미리보기 주소를 문자열로 저장\n  const [preview, setPreview] = useState(imgPlaceHolder);\n\n  //Ref객체 생성 - Ref: 원하는 시점에 DOM Node에 접근할 때 사용\n  const inputRef = useRef();\n\n  const handleChange = (e) => {\n    //files는 배열이기 때문에 배열의 첫번째 값을 가져옴\n    const nextValue = e.target.files[0];\n\n    //onChange에 name값과 files의 0번째 value값을 아규먼트로 넘겨줌\n    onChange(name, nextValue);\n  };\n\n  const handleClearClick = () => {\n    //current는 현재 화면에 렌더링된 파일 인풋을 가르킴\n    const inputNode = inputRef.current;\n\n    //inputNode가 없으면 종료\n    if (!inputNode) return;\n\n    //inputNode의 value값을 초기화\n    inputNode.value = \"\";\n\n    //onChange에 name값과 null값을 아규먼트로 넘겨줌\n    onChange(name, null);\n  };\n\n  useEffect(() => {\n    //value 값이 없으면 useEffect 종료\n    if (!value) return;\n\n    //createObjectURL 문자열을 리턴하고 이 문자열은 해당 파일의 주소처럼 쓸 수 있는 값 -> 사이드 이펙트 발생\n    const nextPrevValue = URL.createObjectURL(value);\n\n    //value prop이 바뀌면 preview의 값이 변경\n    setPreview(nextPrevValue);\n\n    //콜백함수는 마지막으로 정리함수를 리턴\n    return () => {\n      //사이드 이펙트 정리\n      setPreview();\n      //object URL을 해제\n      URL.revokeObjectURL(nextPrevValue);\n    };\n  }, [value]); //value prop이 바뀔때마다 preview의 값이 변경\n\n  return (\n    <div>\n      <img\n        src={imgPlaceHolder}\n        alt=\"이미지 등록 이미지\"\n        onClick={() => inputRef.current?.click()}\n      />\n      <img\n        src={preview}\n        accept=\"image/png, image/jpeg\"\n        alt=\"상품 이미지 미리보기\"\n        className=\"itemPreview\"\n      />\n      <input type=\"file\" name={name} onChange={handleChange} ref={inputRef} />\n      {value && <button onClick={handleClearClick}>X</button>}\n    </div>\n  );\n}\n\nexport default FormInput;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,cAAc,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5C;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACC,cAAc,CAAC;;EAEtD;EACA,MAAMU,QAAQ,GAAGZ,MAAM,CAAC,CAAC;EAEzB,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACA,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;IAEnC;IACAT,QAAQ,CAACF,IAAI,EAAES,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA,MAAMC,SAAS,GAAGP,QAAQ,CAACQ,OAAO;;IAElC;IACA,IAAI,CAACD,SAAS,EAAE;;IAEhB;IACAA,SAAS,CAACZ,KAAK,GAAG,EAAE;;IAEpB;IACAC,QAAQ,CAACF,IAAI,EAAE,IAAI,CAAC;EACtB,CAAC;EAEDP,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACQ,KAAK,EAAE;;IAEZ;IACA,MAAMc,aAAa,GAAGC,GAAG,CAACC,eAAe,CAAChB,KAAK,CAAC;;IAEhD;IACAI,UAAU,CAACU,aAAa,CAAC;;IAEzB;IACA,OAAO,MAAM;MACX;MACAV,UAAU,CAAC,CAAC;MACZ;MACAW,GAAG,CAACE,eAAe,CAACH,aAAa,CAAC;IACpC,CAAC;EACH,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACEH,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MACEsB,GAAG,EAAExB,cAAe;MACpByB,GAAG,EAAC,oDAAY;MAChBC,OAAO,EAAEA,CAAA;QAAA,IAAAC,iBAAA;QAAA,QAAAA,iBAAA,GAAMjB,QAAQ,CAACQ,OAAO,cAAAS,iBAAA,uBAAhBA,iBAAA,CAAkBC,KAAK,CAAC,CAAC;MAAA;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACF9B,OAAA;MACEsB,GAAG,EAAEhB,OAAQ;MACbyB,MAAM,EAAC,uBAAuB;MAC9BR,GAAG,EAAC,0DAAa;MACjBS,SAAS,EAAC;IAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF9B,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAAC/B,IAAI,EAAEA,IAAK;MAACE,QAAQ,EAAEK,YAAa;MAACyB,GAAG,EAAE1B;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvE3B,KAAK,iBAAIH,OAAA;MAAQwB,OAAO,EAAEV,gBAAiB;MAAAO,QAAA,EAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACzB,EAAA,CAjEQJ,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAmElB,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}